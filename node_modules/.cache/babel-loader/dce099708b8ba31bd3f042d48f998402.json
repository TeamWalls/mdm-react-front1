{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\trabajo\\\\mdm-react-front\\\\src\\\\components\\\\Apollo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\n/*iniciar el cliente */\n\nimport { ApolloProvider } from '@apollo/client';\n/*para envolver el app */\n\nimport { useQuery, gql } from '@apollo/client';\n/*la peticion */\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: new InMemoryCache()\n});\nconst EXCHANGE_RATES = gql`\n{\n  characters {\n    results {\n      id\n      name\n    }\n  }\n}\n`;\n\nfunction ExchangeRates() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(EXCHANGE_RATES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  return data.characters.results;\n}\n\n_s(ExchangeRates, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ExchangeRates;\n\nclass Apollo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.results;\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(ExchangeRates, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Apollo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExchangeRates\");","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/trabajo/mdm-react-front/src/components/Apollo.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","EXCHANGE_RATES","ExchangeRates","loading","error","data","characters","results","Apollo","Component","constructor","props","handleSubmit","bind","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AAA6D;;AAE7D,SAASC,cAAT,QAA+B,gBAA/B;AAAgD;;AAEhD,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAA+C;;AAE/C,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC5BM,EAAAA,GAAG,EAAE,qCADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFqB,CAAjB,CAAf;AAOA,MAAMO,cAAc,GAAGJ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,SAASK,aAAT,GAAyB;AAAA;;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACK,cAAD,CAAzC;AAEE,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SAAOC,IAAI,CAACC,UAAL,CAAgBC,OAAvB;AACH;;GAPQL,a;UAC0BN,Q;;;KAD1BM,a;;AAQT,MAAMM,MAAN,SAAqBhB,KAAK,CAACiB,SAA3B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKJ,OAAL;AAEA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEhB,MAAxB;AAAA,6BACG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKH;;AAbiC;;AAgBpC,eAAeU,MAAf","sourcesContent":["import React from 'react';\r\nimport { ApolloClient, InMemoryCache } from '@apollo/client';/*iniciar el cliente */\r\n\r\nimport { ApolloProvider } from '@apollo/client';/*para envolver el app */\r\n\r\nimport { useQuery, gql } from '@apollo/client';/*la peticion */\r\n\r\nconst client = new ApolloClient({\r\n    uri: \"https://rickandmortyapi.com/graphql\",\r\n    cache: new InMemoryCache()\r\n});\r\n\r\n\r\n\r\nconst EXCHANGE_RATES = gql`\r\n{\r\n  characters {\r\n    results {\r\n      id\r\n      name\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nfunction ExchangeRates() {\r\n  const { loading, error, data } = useQuery(EXCHANGE_RATES);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error!</p>;\r\n    \r\n    return data.characters.results;\r\n}\r\nclass Apollo extends React.Component{\r\n  constructor(props) {\r\n      super(props);\r\n      this.results;\r\n  \r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n  }  \r\n  render(){\r\n      return(\r\n        <ApolloProvider client={client}>\r\n           <ExchangeRates></ExchangeRates>\r\n        </ApolloProvider>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Apollo"]},"metadata":{},"sourceType":"module"}