{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\trabajo\\\\mdm-react-front\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport \"./styles.css\";\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\"\n});\n\nconst CharactersQuery = () => {\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: gql`\n        {\n          characters {\n            results {\n              id\n              name\n            }\n          }\n        }\n      `,\n    children: ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }, this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }, this);\n      return data.characters.results.map(character => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: character.name\n        }, character.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this);\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CharactersQuery;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CharactersQuery, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this), rootElement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CharactersQuery\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/trabajo/mdm-react-front/src/index.js"],"names":["React","ReactDOM","ApolloClient","gql","ApolloProvider","Query","client","uri","CharactersQuery","loading","error","data","characters","results","map","character","name","id","App","rootElement","document","getElementById","render"],"mappings":";;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,IAAuBC,GAAvB,QAAkC,cAAlC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,cAAtC;AAEA,OAAO,cAAP;AAEA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;;AAIA,MAAMC,eAAe,GAAG,MAAM;AAC5B,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,EAAEL,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAVI;AAAA,cAYG,CAAC;AAAEM,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACb,UAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEX,aAAOC,IAAI,CAACC,UAAL,CAAgBC,OAAhB,CAAwBC,GAAxB,CAA4BC,SAAS,IAAI;AAC9C,4BAAO;AAAA,oBAAuBA,SAAS,CAACC;AAAjC,WAAQD,SAAS,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFM,CAAP;AAGD;AAnBH;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAxBD;;KAAMT,e;;AA0BN,SAASU,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQA,G;AAQT,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACApB,QAAQ,CAACqB,MAAT,eACE,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEhB,MAAxB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEa,WAJF","sourcesContent":["\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ApolloClient, { gql } from \"apollo-boost\";\r\nimport { ApolloProvider, Query } from \"react-apollo\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://rickandmortyapi.com/graphql\"\r\n});\r\n\r\nconst CharactersQuery = () => {\r\n  return (\r\n    <Query\r\n      query={gql`\r\n        {\r\n          characters {\r\n            results {\r\n              id\r\n              name\r\n            }\r\n          }\r\n        }\r\n      `}\r\n    >\r\n      {({ loading, error, data }) => {\r\n        if (loading) return <p>Loading...</p>;\r\n        if (error) return <p>Error!</p>;\r\n\r\n        return data.characters.results.map(character => {\r\n          return <p key={character.id}>{character.name}</p>;\r\n        });\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <CharactersQuery />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  rootElement\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}