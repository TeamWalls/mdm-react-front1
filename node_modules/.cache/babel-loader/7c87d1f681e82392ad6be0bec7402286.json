{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\trabajo\\\\mdm-react-front\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport Login from './components/login.js';\nimport reportWebVitals from './components/reportWebVitals.js';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\n/*iniciar el cliente */\n\nimport { ApolloProvider } from '@apollo/client';\n/*para envolver el appp */\n\nimport { useQuery, gql } from '@apollo/client';\n/*la peticion */\n\nconst client = new ApolloClient({\n  uri: 'http://3.134.101.34:8000/inventory/#query=query%7B%0A%20%20products%7B%0A%20%20%20%20name%0A%20%20%20%20brand%0A%20%20%7D%0A%7D',\n  cache: new InMemoryCache()\n});\nconst EXCHANGE_RATES = gql`\n    query{\n      products{\n        name\n        brand\n      }\n    }\n`;\n\nfunction ExchangeRates() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(EXCHANGE_RATES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return data.rates.map(({\n    currency,\n    rate\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [currency, \": \", rate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, currency, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this));\n}\n\n_s(ExchangeRates, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ExchangeRates;\ndocument.getElementById('root').className += \"root\";\nReactDOM.render(\n/*#__PURE__*/\n\n/*\r\n<React.StrictMode>\r\n  <App />\r\n</React.StrictMode>\r\n*/\n_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 2\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"ExchangeRates\");","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/trabajo/mdm-react-front/src/index.js"],"names":["React","ReactDOM","App","Login","reportWebVitals","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","EXCHANGE_RATES","ExchangeRates","loading","error","data","rates","map","currency","rate","document","getElementById","className","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AAA6D;;AAE7D,SAASC,cAAT,QAA+B,gBAA/B;AAAgD;;AAEhD,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAA+C;;AAE/C,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC5BM,EAAAA,GAAG,EAAE,iIADuB;AAE5BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFqB,CAAjB,CAAf;AAKA,MAAMO,cAAc,GAAGJ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASK,aAAT,GAAyB;AAAA;;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACK,cAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,kBACpB;AAAA,2BACE;AAAA,iBACGD,QADH,QACeC,IADf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAUD,QAAV;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAOD;;GAbQN,a;UAC0BN,Q;;;KAD1BM,a;AAeTQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,IAA2C,MAA3C;AACAvB,QAAQ,CAACwB,MAAT;AAAA;;AACE;AACF;AACA;AACA;AACA;AACC,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEf,MAAxB;AAAA,yBACK,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,QAND,EAWEY,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXF,E,CAcA;AACA;AACA;;AACAnB,eAAe","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport Login from './components/login.js'\r\nimport reportWebVitals from './components/reportWebVitals.js';\r\n\r\nimport { ApolloClient, InMemoryCache } from '@apollo/client';/*iniciar el cliente */\r\n\r\nimport { ApolloProvider } from '@apollo/client';/*para envolver el appp */\r\n\r\nimport { useQuery, gql } from '@apollo/client';/*la peticion */\r\n\r\nconst client = new ApolloClient({\r\n    uri: 'http://3.134.101.34:8000/inventory/#query=query%7B%0A%20%20products%7B%0A%20%20%20%20name%0A%20%20%20%20brand%0A%20%20%7D%0A%7D',\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nconst EXCHANGE_RATES = gql`\r\n    query{\r\n      products{\r\n        name\r\n        brand\r\n      }\r\n    }\r\n`;\r\n\r\nfunction ExchangeRates() {\r\n  const { loading, error, data } = useQuery(EXCHANGE_RATES);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return data.rates.map(({ currency, rate }) => (\r\n    <div key={currency}>\r\n      <p>\r\n        {currency}: {rate}\r\n      </p>\r\n    </div>\r\n  ));\r\n}\r\n\r\ndocument.getElementById('root').className+=\"root\";\r\nReactDOM.render(\r\n  /*\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  */\r\n <ApolloProvider client={client}>\r\n      <Login></Login>\r\n </ApolloProvider>\r\n\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"]},"metadata":{},"sourceType":"module"}