{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\holamundo\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Page from './components/page';\nimport { ApolloProvider, useQuery, gql } from '@apollo/client';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nconst client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache()\n});\n\nconst ChaQuery = () => {\n  return /*#__PURE__*/_jsxDEV(\"useQuery\", {\n    query: gql`{\n    characters{\n      results {\n        id\n        name\n        image\n      }\n    }\n  }`,\n    children: ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }, this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this);\n      return data.characters.results.map(character => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ChaQuery;\nconst container = document.getElementById('root');\ncontainer.classList.add(\"root\");\n/*esta funcion nos permite mostrar en pantalla un elemento\nresive dos elementos 1-el emento 2-el contedor*/\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: [/*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ChaQuery, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this), container);\n/*\nconst user ={\n    firstname:\"john\",\n    lastname:\"llanes\",\n    url:'https://dwglogo.com/wp-content/uploads/2017/09/1460px-React_logo.png'\n};\nfunction formatName(user){\n  return user.firstname+' '+user.lastname;\n}\n\nconst element=(\n  <div className=\"container\">\n      <img src={user.url}></img>\n      <h1>Hola, {formatName(user)}!</h1>\n  </div>    \n);\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ChaQuery\");","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/holamundo/src/index.js"],"names":["React","ReactDOM","Page","ApolloProvider","useQuery","gql","ApolloClient","InMemoryCache","client","uri","cache","ChaQuery","loading","error","data","characters","results","map","character","name","container","document","getElementById","classList","add","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,cAAT,EAA0BC,QAA1B,EAAoCC,GAApC,QAAgD,gBAAhD;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE,qCADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIH,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,MAAMI,QAAQ,GAAC,MAAI;AACjB,sBAAO;AAAU,IAAA,KAAK,EAAEN,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IARS;AAAA,cASJ,CAAC;AAACO,MAAAA,OAAD;AAASC,MAAAA,KAAT;AAAeC,MAAAA;AAAf,KAAD,KAAwB;AACvB,UAAGF,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACZ,UAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEV,aAAOC,IAAI,CAACC,UAAL,CAAgBC,OAAhB,CAAwBC,GAAxB,CAA4BC,SAAS,IAAE;AAC5C,4BAAO;AAAA,oBAAIA,SAAS,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFM,CAAP;AAGD;AAhBI;AAAA;AAAA;AAAA;AAAA,UAAP;AAkBD,CAnBD;;KAAMR,Q;AAqBN,MAAMS,SAAS,GAACC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhB;AACMF,SAAS,CAACG,SAAV,CAAoBC,GAApB,CAAwB,MAAxB;AACN;AACA;;AACAvB,QAAQ,CAACwB,MAAT,eACE,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEjB,MAAxB;AAAA,0BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKEY,SALF;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css' ;\nimport Page from './components/page'\n\nimport { ApolloProvider , useQuery, gql }  from '@apollo/client';\n\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache()\n});\n\nconst ChaQuery=()=>{\n  return <useQuery query={gql`{\n    characters{\n      results {\n        id\n        name\n        image\n      }\n    }\n  }`}>\n    {({loading,error,data})=>{\n      if(loading) return <p>Loading...</p>\n      if(error) return <p>Error!</p>\n\n      return data.characters.results.map(character=>{\n        return <p>{character.name}</p>\n      })\n    }}\n  </useQuery>\n}\n\nconst container=document.getElementById('root');\n      container.classList.add(\"root\");\n/*esta funcion nos permite mostrar en pantalla un elemento\nresive dos elementos 1-el emento 2-el contedor*/ \nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Page />\n    <ChaQuery></ChaQuery>\n  </ApolloProvider>\n ,container)\n\n/*\nconst user ={\n    firstname:\"john\",\n    lastname:\"llanes\",\n    url:'https://dwglogo.com/wp-content/uploads/2017/09/1460px-React_logo.png'\n};\nfunction formatName(user){\n  return user.firstname+' '+user.lastname;\n}\n\nconst element=(\n  <div className=\"container\">\n      <img src={user.url}></img>\n      <h1>Hola, {formatName(user)}!</h1>\n  </div>    \n);\n*/"]},"metadata":{},"sourceType":"module"}